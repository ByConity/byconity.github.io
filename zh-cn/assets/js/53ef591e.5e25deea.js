"use strict";(self.webpackChunkbyconity=self.webpackChunkbyconity||[]).push([[5520],{49613:(t,r,e)=>{e.d(r,{Zo:()=>u,kt:()=>d});var n=e(59496);function s(t,r,e){return r in t?Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[r]=e,t}function o(t,r){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),e.push.apply(e,n)}return e}function a(t){for(var r=1;r<arguments.length;r++){var e=null!=arguments[r]?arguments[r]:{};r%2?o(Object(e),!0).forEach((function(r){s(t,r,e[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(e,r))}))}return t}function i(t,r){if(null==t)return{};var e,n,s=function(t,r){if(null==t)return{};var e,n,s={},o=Object.keys(t);for(n=0;n<o.length;n++)e=o[n],r.indexOf(e)>=0||(s[e]=t[e]);return s}(t,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)e=o[n],r.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(s[e]=t[e])}return s}var c=n.createContext({}),l=function(t){var r=n.useContext(c),e=r;return t&&(e="function"==typeof t?t(r):a(a({},r),t)),e},u=function(t){var r=l(t.components);return n.createElement(c.Provider,{value:r},t.children)},m="mdxType",p={inlineCode:"code",wrapper:function(t){var r=t.children;return n.createElement(n.Fragment,{},r)}},_=n.forwardRef((function(t,r){var e=t.components,s=t.mdxType,o=t.originalType,c=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),m=l(e),_=s,d=m["".concat(c,".").concat(_)]||m[_]||p[_]||o;return e?n.createElement(d,a(a({ref:r},u),{},{components:e})):n.createElement(d,a({ref:r},u))}));function d(t,r){var e=arguments,s=r&&r.mdxType;if("string"==typeof t||s){var o=e.length,a=new Array(o);a[0]=_;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=t,i[m]="string"==typeof t?t:s,a[1]=i;for(var l=2;l<o;l++)a[l]=e[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,e)}_.displayName="MDXCreateElement"},18405:(t,r,e)=>{e.r(r),e.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=e(64778),s=(e(59496),e(49613));const o={title:"\u67e5\u8be2\u4f18\u5316\u5668",sidebar_position:1,tags:["Docs"]},a="\u67e5\u8be2\u4f18\u5316\u5668",i={unversionedId:"query-optimization/query-optimizer",id:"version-0.3.0/query-optimization/query-optimizer",title:"\u67e5\u8be2\u4f18\u5316\u5668",description:"\u4f18\u5316\u5668\u662f\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6838\u5fc3\uff0c\u4f18\u79c0\u7684\u4f18\u5316\u5668\u80fd\u6781\u5927\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\uff0c\u7279\u522b\u662f\u5728\u590d\u6742\u67e5\u8be2\u573a\u666f\u4e0b\u4f18\u5316\u5668\u80fd\u5e26\u6765\u6570\u500d\u81f3\u6570\u767e\u500d\u7684\u6027\u80fd\u63d0\u5347\u3002",source:"@site/i18n/zh-cn/docusaurus-plugin-content-docs/version-0.3.0/query-optimization/query-optimizer.mdx",sourceDirName:"query-optimization",slug:"/query-optimization/query-optimizer",permalink:"/zh-cn/docs/0.3.0/query-optimization/query-optimizer",draft:!1,editUrl:"https://github.com/ByConity/byconity.github.io/tree/main/i18n/zh-cn/docusaurus-plugin-content-docs/version-0.3.0/query-optimization/query-optimizer.mdx",tags:[{label:"Docs",permalink:"/zh-cn/docs/0.3.0/tags/docs"}],version:"0.3.0",sidebarPosition:1,frontMatter:{title:"\u67e5\u8be2\u4f18\u5316\u5668",sidebar_position:1,tags:["Docs"]},sidebar:"tutorialSidebar",previous:{title:"External Catalog",permalink:"/zh-cn/docs/0.3.0/data-lakes/hive-external-catalog"},next:{title:"\u6570\u636e\u9884\u52a0\u8f7d",permalink:"/zh-cn/docs/0.3.0/query-optimization/query-optimization-with-cache-preload"}},c={},l=[{value:"\u6536\u96c6\u3001\u663e\u793a\u548c\u5220\u9664\u7edf\u8ba1\u4fe1\u606f\u7684\u547d\u4ee4",id:"\u6536\u96c6\u663e\u793a\u548c\u5220\u9664\u7edf\u8ba1\u4fe1\u606f\u7684\u547d\u4ee4",level:2},{value:"\u6536\u96c6\u7edf\u8ba1\u4fe1\u606f",id:"\u6536\u96c6\u7edf\u8ba1\u4fe1\u606f",level:3},{value:"\u663e\u793a\u7edf\u8ba1\u4fe1\u606f",id:"\u663e\u793a\u7edf\u8ba1\u4fe1\u606f",level:3},{value:"\u5220\u9664\u7edf\u8ba1\u4fe1\u606f",id:"\u5220\u9664\u7edf\u8ba1\u4fe1\u606f",level:3},{value:"Explain\u7684\u4f7f\u7528",id:"explain\u7684\u4f7f\u7528",level:2}],u={toc:l},m="wrapper";function p(t){let{components:r,...o}=t;return(0,s.kt)(m,(0,n.Z)({},u,o,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"\u67e5\u8be2\u4f18\u5316\u5668"},"\u67e5\u8be2\u4f18\u5316\u5668"),(0,s.kt)("p",null,"\u4f18\u5316\u5668\u662f\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6838\u5fc3\uff0c\u4f18\u79c0\u7684\u4f18\u5316\u5668\u80fd\u6781\u5927\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\uff0c\u7279\u522b\u662f\u5728\u590d\u6742\u67e5\u8be2\u573a\u666f\u4e0b\u4f18\u5316\u5668\u80fd\u5e26\u6765\u6570\u500d\u81f3\u6570\u767e\u500d\u7684\u6027\u80fd\u63d0\u5347\u3002"),(0,s.kt)("p",null,"ByConity \u81ea\u7814\u4f18\u5316\u5668\u57fa\u4e8e\u4e09\u4e2a\u4f18\u5316\u65b9\u5411\u63d0\u4f9b\u6781\u81f4\u4f18\u5316\u80fd\u529b\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"RBO\uff1a\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\u80fd\u529b\u3002ByConity\u5b9e\u73b0\u4e86\u4e24\u79cd\u65b9\u6848\uff0c\u4e00\u79cd\u662f\u57fa\u4e8eVisitor\u7684\u5168\u5c40\u6539\u5199\uff0c\u4f8b\u5982Filter\u7684\u4e0b\u63a8\u3001\u5217\u88c1\u526a\u7b49\u3002\u53e6\u4e00\u79cd\u662fpattern match\u7684\u5c40\u90e8\u6539\u5199\uff0c\u4f8b\u5982\u628a\u4e24\u4e2aFilter\u8fdb\u884cmerge\u7b49\u3002\u603b\u4f53\u652f\u6301\u4e86\u5217\u88c1\u526a\u3001\u5206\u533a\u88c1\u526a\u3001\u8868\u8fbe\u5f0f\u7b80\u5316\u3001\u5b50\u67e5\u8be2\u89e3\u5173\u8054\u3001\u8c13\u8bcd\u4e0b\u63a8\u3001\u5197\u4f59\u7b97\u5b50\u6d88\u9664\u3001Outer-JOIN \u8f6c INNER-JOIN\u3001\u7b97\u5b50\u4e0b\u63a8\u5b58\u50a8\u3001\u5206\u5e03\u5f0f\u7b97\u5b50\u62c6\u5206\u7b49\u5e38\u89c1\u7684\u542f\u53d1\u5f0f\u4f18\u5316\u80fd\u529b\u3002"),(0,s.kt)("li",{parentName:"ul"},"CBO\uff1a\u57fa\u4e8e\u4ee3\u4ef7\u7684\u4f18\u5316\u80fd\u529b\u3002\u8fd9\u79cd\u4f18\u5316\u4f9d\u8d56\u4e8e\u7edf\u8ba1\u4fe1\u606f\u7684\u6536\u96c6\uff0c\u76ee\u524d\u662f\u57fa\u4e8eCascades\u7684\u4e00\u4e2a\u641c\u7d22\u6846\u67b6\u5b9e\u73b0\u3002ByConity\u652f\u6301\u4e86Join Reorder\u3001Outer-Join Reorder\u3001Join/Agg Reorder\u3001CTE\u3001\u7269\u5316\u89c6\u56fe\u3001Dynamic Filter \u4e0b\u63a8\u3001Magic Set \u7b49\u57fa\u4e8e\u4ee3\u4ef7\u7684\u4f18\u5316\u80fd\u529b\u3002\u5e76\u4e14\u9762\u5411\u5206\u5e03\u5f0f\u8ba1\u5212\u878d\u5408\u4e86 Property Enforcement\u3002"),(0,s.kt)("li",{parentName:"ul"},"DBO\uff1a\u57fa\u4e8e\u6570\u636e\u4f9d\u8d56\u7684\u4f18\u5316\u80fd\u529b\u3002\u652f\u6301\uff1a\u552f\u4e00\u952e\u3001functional dependency\u3001Order dependency\u3001Inclusion dependency \u7b49\u57fa\u4e8e\u6570\u636e\u4f9d\u8d56\u5173\u7cfb\u7684\u4f18\u5316\u80fd\u529b\u3002")),(0,s.kt)("p",null,"\u5728ByConity\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\u6253\u5f00\u4f18\u5316\u5668\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"-- \u6ce8\u610f\uff1a\u8fd9\u91cc\u5982\u679c\u6253\u5f00\u4e86ANSI mode, \u4f18\u5316\u5668\u4e5f\u4f1a\u81ea\u52a8\u6253\u5f00\nset dialect_type ='ANSI'\n-- \u6216\u8005\nset enable_optimizer =1\n")),(0,s.kt)("h2",{id:"\u6536\u96c6\u663e\u793a\u548c\u5220\u9664\u7edf\u8ba1\u4fe1\u606f\u7684\u547d\u4ee4"},"\u6536\u96c6\u3001\u663e\u793a\u548c\u5220\u9664\u7edf\u8ba1\u4fe1\u606f\u7684\u547d\u4ee4"),(0,s.kt)("p",null,"###\u8bed\u6cd5\u5b9a\u4e49\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u8bf4\u660e\uff1a\u540e\u7eed\u7248\u672c\u5c06\u5177\u6709\u81ea\u52a8\u6536\u96c6\u3001\u66f4\u65b0\u548c\u5206\u6790\u7edf\u8ba1\u4fe1\u606f\u7684\u529f\u80fd")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"-- NOTE: \u53c2\u6570ALL\u8868\u793a\u5f53\u524d\u6570\u636e\u5e93\u7684\u6240\u6709\u8868\n\n-- \u652f\u6301\u6307\u5b9a\u5217\u548c\u6837\u672c\u914d\u7f6e\nCREATE STATS [IF NOT EXISTS] (<db>.* | ALL | [<db>.]<table>['(' <col1>, <col2>, ..., <coln> ')']) [WITH (FULLSCAN | SAMPLE [<rows> ROWS] [<ratio> RATIO])]\n\n-- \u5220\u9664\u7edf\u8ba1\u4fe1\u606f\n-- \u652f\u6301\u6307\u5b9a\u5217\nDROP STATS (<db>.* | ALL | [<db>.]<table>['(' <col1>, <col2>, ..., <coln> ')' ])\n\n-- \u652f\u6301\u6307\u5b9a\u5217\nSHOW (STATS|COLUMN_STATS) (<db>.* | ALL | [<db>.]<table>'('<col1>, <col2>, ..., <coln> ')' )\n")),(0,s.kt)("h3",{id:"\u6536\u96c6\u7edf\u8ba1\u4fe1\u606f"},"\u6536\u96c6\u7edf\u8ba1\u4fe1\u606f"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\n-- \u4e3a\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u7edf\u8ba1\u4fe1\u606f\u7684\u6240\u6709\u8868\u521b\u5efa\u7edf\u8ba1\u4fe1\u606f\ncreate stats if not exists all;\n\n-- \u4e3adb1\u4e2d\u6ca1\u6709\u7edf\u8ba1\u4fe1\u606f\u7684\u6240\u6709\u8868\u521b\u5efa\u7edf\u8ba1\u4fe1\u606f\ncreate stats if not exists db1.*;\n\n-- \u4e3at1.c1\u521b\u5efa\u7edf\u8ba1\u4fe1\u606f\ncreate stats t1(c1);\n\n-- \u4e3at1.c1,\u548ct1.c2\u521b\u5efa\u7edf\u8ba1\u4fe1\u606f\ncreate stats t1(c1, c2);\n\n-- \u5728t1\u4e0a\u521b\u5efa\u7edf\u8ba1\u4fe1\u606f\uff0c\u5f3a\u5236\u4f7f\u7528\u5168\u8868\u626b\u63cf\uff0c\ncreate stats t1 with fullscan\n\n-- \u5728\u521b\u5efa\u6bcf\u4e2a\u8868\u7684\u7edf\u8ba1\u4fe1\u606f\u65f6\u5019\uff0c\u62bd\u6837\u5982\u4e0b\u884c\n-- MAX(**statistics_sample_row_count**, 0.01 * full_rows_count)\ncreate stats all with 0.01 ratio;\n\n-- \u5728\u521b\u5efa\u6bcf\u4e2a\u8868\u7684\u7edf\u8ba1\u4fe1\u606f\u65f6\uff0c\u62bd\u6837\u5982\u4e0b\u884c\n-- MAX(40000000, 0.01 * full_rows_count) \ncreate stats all with 0.01 ratio 40000000 rows;\n\n-- \u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\u8fdb\u884c\u53d6\u6837\uff0c\n-- \u7531 statistics_sample_row_count \u548c statistics_sample_ratio \u63a7\u5236\ncreate stats all with sample;\n\n")),(0,s.kt)("h3",{id:"\u663e\u793a\u7edf\u8ba1\u4fe1\u606f"},"\u663e\u793a\u7edf\u8ba1\u4fe1\u606f"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\n-- \u663e\u793a\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u6240\u6709\u8868\u7684\u8868\u7edf\u8ba1\u4fe1\u606f\nshow stats all;\n\n-- \u663e\u793a db1 \u4e2d\u6240\u6709\u8868\u7684\u8868\u7edf\u8ba1\u4fe1\u606f\nshow stats db1.*;\n\n-- \u663e\u793a\u8868 t1 \u7684\u8868\u7edf\u8ba1\u4fe1\u606f\nshow stats t1;\n\n-- \u663e\u793a\u8868 t1 \u7684\u5217\u7edf\u8ba1\u4fe1\u606f\nshow column_stats t1;\n\n-- \u663e\u793a\u8868 t1 \u7684\u5217 c1\u3001c2 \u7684\u5217\u7edf\u8ba1\u4fe1\u606f\nshow column_stats t1(c1, c2);\n\n")),(0,s.kt)("h3",{id:"\u5220\u9664\u7edf\u8ba1\u4fe1\u606f"},"\u5220\u9664\u7edf\u8ba1\u4fe1\u606f"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\n-- \u5220\u9664\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u6240\u6709\u8868\u7684\u7edf\u8ba1\u4fe1\u606f\ndrop stats all;\n\n-- \u5220\u9664 db1.* \u4e2d\u6240\u6709\u8868\u7684\u7edf\u8ba1\u4fe1\u606f\ndrop stats db1.*;\n\n-- \u5220\u9664\u8868 t1 \u7684\u7edf\u8ba1\u4fe1\u606f\ndrop stats t1;\n\n-- \u5220\u9664\u8868 t1 \u7684\u5217 c1\u3001c2 \u7684\u7edf\u8ba1\u4fe1\u606f\ndrop stats t1(c1, c2);\n\n")),(0,s.kt)("h2",{id:"explain\u7684\u4f7f\u7528"},"Explain\u7684\u4f7f\u7528"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Explain + SQL")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"EXPLAIN\nWITH\n    (\n        SELECT\n            sr_customer_sk AS ctr_customer_sk,\n            sr_store_sk AS ctr_store_sk,\n            sum(sr_return_amt) AS ctr_total_return\n        FROM store_returns\n        , date_dim\n        WHERE (sr_returned_date_sk = d_date_sk) AND (d_year = 2000)\n        GROUP BY\n            sr_customer_sk,\n            sr_store_sk\n    ) AS customer_total_return\nSELECT c_customer_id\nFROM customer_total_return AS ctr1\n, store\n, customer\nWHERE (ctr1.ctr_total_return >\n(\n    SELECT avg(ctr_total_return) * 1.2\n    FROM customer_total_return AS ctr2\n    WHERE ctr1.ctr_store_sk = ctr2.ctr_store_sk\n)) AND (s_store_sk = ctr1.ctr_store_sk) AND (s_state = 'TN') AND (ctr1.ctr_customer_sk = c_customer_sk)\nORDER BY c_customer_id ASC\nLIMIT 100\n\n")),(0,s.kt)("p",null,"\u7ed3\u679c\u8f93\u51fa\uff1a"),(0,s.kt)("p",null,(0,s.kt)("img",{src:e(87126).Z,width:"2008",height:"1712"})),(0,s.kt)("ol",{start:2},(0,s.kt)("li",{parentName:"ol"},"Explain analyze + SQL")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"EXPLAIN ANALYZE LOGICAL\nWITH customer_total_return AS\n\n    (\n        SELECT\n            sr_customer_sk AS ctr_customer_sk,\n            sr_store_sk AS ctr_store_sk,\n            sum(sr_return_amt) AS ctr_total_return\n        FROM store_returns\n        , date_dim\n        WHERE (sr_returned_date_sk = d_date_sk) AND (d_year = 2000)\n        GROUP BY\n            sr_customer_sk,\n            sr_store_sk\n    )\nSELECT c_customer_id\nFROM customer_total_return AS ctr1\n, store\n, customer\nWHERE (ctr1.ctr_total_return >\n(\n    SELECT avg(ctr_total_return) * 1.2\n    FROM customer_total_return AS ctr2\n    WHERE ctr1.ctr_store_sk = ctr2.ctr_store_sk\n)) AND (s_store_sk = ctr1.ctr_store_sk) AND (s_state = 'TN') AND (ctr1.ctr_customer_sk = c_customer_sk)\nORDER BY c_customer_id ASC\nLIMIT 100\n\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\u250c\u2500Explain Analyze\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Limit                                                                                                                                                                \u2502\n\u2502 \u2502     Est. 100 rows, cost 8.2e+05                                                                                                                                    \u2502\n\u2502 \u2502     Act. 100 rows (2.4 KB), Throughput: 545.0K rows/s, CPU Time per worker: avg 2.0 us, max 2.0 us, Wall Time: 1.8 ms                                              \u2502\n\u2502 \u2502     Filtered: 0.0%, QError: 1.0                                                                                                                                    \u2502\n\u2502 \u2514\u2500 MergeSorting                                                                                                                                                      \u2502\n\u2502    \u2502     Est. 49.2K rows, cost 8.2e+05                                                                                                                               \u2502\n\u2502    \u2502     Act. 100 rows (2.4 KB), Throughput: 545.0K rows/s, CPU Time per worker: avg 2.0 us, max 2.0 us, Wall Time: 1.8 ms                                           \u2502\n\u2502    \u2502     Filtered: 96.9%, QError: 504.1                                                                                                                              \u2502\n\u2502    \u2514\u2500 Union                                                                                                                                                          \u2502\n\u2502       \u2502     Est. 49.2K rows, cost 8.2e+05                                                                                                                            \u2502\n\u2502       \u2502     Act. 3.1K rows (78.1 KB), Throughput: 17.0M rows/s, CPU Time per worker: avg 0.0 us, max 0.0 us, Wall Time: 1.8 ms                                       \u2502\n\u2502       \u2502     Filtered: 0.0%, QError: 15.8                                                                                                                             \u2502\n\u2502       \u2514\u2500 PartialSorting                                                                                                                                              \u2502\n\u2502          \u2502     Est. 49.2K rows, cost 8.2e+05                                                                                                                         \u2502\n\u2502          \u2502     Act. 3.1K rows (78.1 KB), Throughput: 17.0M rows/s, CPU Time per worker: avg 40.0 us, max 40.0 us, Wall Time: 1.8 ms                                  \u2502\n\u2502          \u2502     Filtered: 0.0%, QError: 15.8                                                                                                                          \u2502\n\u2502          \u2514\u2500 Gather Exchange                                                                                                                                          \u2502\n\u2502             \u2502     Est. 49.2K rows, cost 8.2e+05                                                                                                                      \u2502\n\u2502             \u2514\u2500 MergeSorting                                                                                                                                          \u2502\n\u2502                \u2502     Est. 49.2K rows, cost 8.1e+05                                                                                                                   \u2502\n\u2502                \u2502     Act. 12.5K rows (313.1 KB), Throughput: 108.2M rows/s, CPU Time per worker: avg 23.0 us, max 25.0 us, Wall Time: 1.2 ms                         \u2502\n\u2502                \u2502     Filtered: -1.6%, QError: 3.9                                                                                                                    \u2502\n\u2502                \u2514\u2500 PartialSorting                                                                                                                                     \u2502\n\u2502                   \u2502     Est. 49.2K rows, cost 8.1e+05                                                                                                                \u2502\n\u2502                   \u2502     Act. 12.3K rows (308.3 KB), Throughput: 91.6M rows/s, CPU Time per worker: avg 40.0 us, max 40.0 us, Wall Time: 1.3 ms                       \u2502\n\u2502                   \u2502     Filtered: 0.0%, QError: 4.0                                                                                                                  \u2502\n\u2502                   \u2514\u2500 Inner Join                                                                                                                                      \u2502\n\u2502                      \u2502     Est. 47.5K rows, cost 8.1e+05                                                                                                             \u2502\n\u2502                      \u2502     Act. 12.3K rows (308.3 KB), Throughput: 91.6M rows/s, CPU Time per worker: avg 41.6 ms, max 41.8 ms, Wall Time: 1.3 ms                    \u2502\n\u2502                      \u2502     Filtered: 0.0%, QError: 3.9                                                                                                               \u2502\n\u2502                      \u2502     Condition: sr_store_sk_1 == s_store_sk                                                                                                    \u2502\n\u2502                      \u2502     Filter: `sum(sr_return_amt)_1` > (`avg(ctr_total_return)` * 1.2)                                                                          \u2502\n\u2502                      \u251c\u2500 Local Exchange                                                                                                                               \u2502\n\u2502                      \u2502  \u2502     Est. 49.2K rows, cost 2.9e+05                                                                                                          \u2502\n\u2502                      \u2502  \u2514\u2500 Inner Join                                                                                                                                \u2502\n\u2502                      \u2502     \u2502     Est. 49.2K rows, cost 2.9e+05                                                                                                       \u2502\n\u2502                      \u2502     \u2502     Act. 49.3K rows (2.1 MB), Throughput: 542.3M rows/s, CPU Time per worker: avg 6.2 ms, max 6.4 ms, Wall Time: 896.0 us               \u2502\n\u2502                      \u2502     \u2502     Filtered: 0.0%, QError: 1.0                                                                                                         \u2502\n\u2502                      \u2502     \u2502     Condition: c_customer_sk == sr_customer_sk_1                                                                                        \u2502\n\u2502                      \u2502     \u251c\u2500 Repartition Exchange                                                                                                                   \u2502\n\u2502                      \u2502     \u2502  \u2502     Est. 97.7K rows, cost 9.0e+04                                                                                                    \u2502\n\u2502                      \u2502     \u2502  \u2502     Partition by: {c_customer_sk}                                                                                                    \u2502\n\u2502                      \u2502     \u2502  \u2514\u2500 ReadFromStorage tpcds.customer                                                                                                      \u2502\n\u2502                      \u2502     \u2502           Est. 97.7K rows, cost 7.4e+04                                                                                                 \u2502\n\u2502                      \u2502     \u2502           Act. 97.7K rows (3.1 MB), Throughput: 22.2G rows/s, CPU Time per worker: avg 362.0 us, max 402.0 us, Wall Time: 47.0 us       \u2502\n\u2502                      \u2502     \u2502           Filtered: 0.0%, QError: 1.0                                                                                                   \u2502\n\u2502                      \u2502     \u2514\u2500 Repartition Exchange                                                                                                                   \u2502\n\u2502                      \u2502        \u2502     Est. 50.9K rows, cost 6.1e+04                                                                                                    \u2502\n\u2502                      \u2502        \u2502     Partition by: {sr_customer_sk_1}                                                                                                 \u2502\n\u2502                      \u2502        \u2514\u2500 CTERef [0]                                                                                                                          \u2502\n\u2502                      \u2502                 Est. 50.9K rows, cost 5.2e+04                                                                                                 \u2502\n\u2502                      \u2514\u2500 Broadcast Exchange                                                                                                                           \u2502\n\u2502                         \u2502     Est. 7 rows, cost 5.6e+04                                                                                                              \u2502\n\u2502                         \u2514\u2500 Inner Join                                                                                                                                \u2502\n\u2502                            \u2502     Est. 7 rows, cost 5.6e+04                                                                                                           \u2502\n\u2502                            \u2502     Act. 6 rows (102.0 Bytes), Throughput: 67.7K rows/s, CPU Time per worker: avg 280.0 us, max 360.0 us, Wall Time: 870.0 us           \u2502\n\u2502                            \u2502     Filtered: 97.9%, QError: 1.2                                                                                                        \u2502\n\u2502                            \u2502     Condition: s_store_sk == sr_store_sk_2                                                                                              \u2502\n\u2502                            \u251c\u2500 Repartition Exchange                                                                                                                   \u2502\n\u2502                            \u2502  \u2502     Est. 12 rows, cost 1.2e+01                                                                                                       \u2502\n\u2502                            \u2502  \u2502     Partition by: {s_store_sk}                                                                                                       \u2502\n\u2502                            \u2502  \u2514\u2500 Filter                                                                                                                              \u2502\n\u2502                            \u2502     \u2502     Est. 12 rows, cost 9.8e+00                                                                                                    \u2502\n\u2502                            \u2502     \u2502     Act. 12 rows (240.0 Bytes), Throughput: 28.6M rows/s, CPU Time per worker: avg 16.0 us, max 24.0 us, Wall Time: 5.0 us        \u2502\n\u2502                            \u2502     \u2502     Filtered: 0.0%, QError: 1.0                                                                                                   \u2502\n\u2502                            \u2502     \u2502     s_state = 'TN'                                                                                                                \u2502\n\u2502                            \u2502     \u2514\u2500 ReadFromStorage tpcds.store                                                                                                      \u2502\n\u2502                            \u2502              Est. 12 rows, cost 8.9e+00                                                                                                 \u2502\n\u2502                            \u2502              Act. 12 rows (240.0 Bytes), Throughput: 28.6M rows/s, CPU Time per worker: avg 48.0 us, max 72.0 us, Wall Time: 4.0 us     \u2502\n\u2502                            \u2502              Filtered: 0.0%, QError: 1.0                                                                                                \u2502\n\u2502                            \u2514\u2500 MergingAggregated                                                                                                                      \u2502\n\u2502                               \u2502     Est. 6 rows, cost 5.6e+04                                                                                                        \u2502\n\u2502                               \u2502     Act. 280 rows (4.9 KB), Throughput: 3.1M rows/s, CPU Time per worker: avg 60.0 us, max 80.0 us, Wall Time: 867.0 us              \u2502\n\u2502                               \u2502     Filtered: 0.0%, QError: 46.7                                                                                                     \u2502\n\u2502                               \u2514\u2500 Repartition Exchange                                                                                                                \u2502\n\u2502                                  \u2502     Est. 6 rows, cost 5.6e+04                                                                                                     \u2502\n\u2502                                  \u2502     Partition by: {sr_store_sk_2}                                                                                                 \u2502\n\u2502                                  \u2514\u2500 Aggregating                                                                                                                      \u2502\n\u2502                                     \u2502     Est. 6 rows, cost 5.6e+04                                                                                                  \u2502\n\u2502                                     \u2502     Act. 14 rows (238.0 Bytes), Throughput: 145.6K rows/s, CPU Time per worker: avg 7.0 us, max 9.0 us, Wall Time: 955.0 us    \u2502\n\u2502                                     \u2502     Filtered: 100.0%, QError: 2.3                                                                                              \u2502\n\u2502                                     \u2502     Group by: {sr_store_sk_2}                                                                                                  \u2502\n\u2502                                     \u2514\u2500 Projection                                                                                                                    \u2502\n\u2502                                        \u2502     Est. 50.9K rows, cost 5.6e+04                                                                                           \u2502\n\u2502                                        \u2502     Act. 49.3K rows (887.4 KB), Throughput: 519.5M rows/s, CPU Time per worker: avg 0.0 us, max 0.0 us, Wall Time: 947.0 us \u2502\n\u2502                                        \u2502     Filtered: 0.0%, QError: 1.0                                                                                             \u2502\n\u2502                                        \u2514\u2500 CTERef [0]                                                                                                                 \u2502\n\u2502                                                 Est. 50.9K rows, cost 5.2e+04                                                                                        \u2502\n\u2502 CTEDef [0]                                                                                                                                                           \u2502\n\u2502    MergingAggregated                                                                                                                                                 \u2502\n\u2502    \u2502     Est. 50.9K rows, cost 4.3e+05                                                                                                                               \u2502\n\u2502    \u2502     Act. 49.3K rows (1.3 MB), Throughput: 497.5M rows/s, CPU Time per worker: avg 34.0 us, max 35.0 us, Wall Time: 996.0 us                                     \u2502\n\u2502    \u2502     Filtered: 0.0%, QError: 1.0                                                                                                                                 \u2502\n\u2502    \u2514\u2500 Repartition Exchange                                                                                                                                           \u2502\n\u2502       \u2502     Est. 50.9K rows, cost 4.3e+05                                                                                                                            \u2502\n\u2502       \u2502     Partition by: {sr_customer_sk, sr_store_sk}                                                                                                              \u2502\n\u2502       \u2514\u2500 Aggregating                                                                                                                                                 \u2502\n\u2502          \u2502     Est. 50.9K rows, cost 4.2e+05                                                                                                                         \u2502\n\u2502          \u2502     Act. 51.4K rows (1.3 MB), Throughput: 1.1G rows/s, CPU Time per worker: avg 27.0 us, max 28.0 us, Wall Time: 506.0 us                                 \u2502\n\u2502          \u2502     Filtered: 5.8%, QError: 1.0                                                                                                                           \u2502\n\u2502          \u2502     Group by: {sr_customer_sk, sr_store_sk}                                                                                                               \u2502\n\u2502          \u2514\u2500 Inner Join                                                                                                                                               \u2502\n\u2502             \u2502     Est. 50.9K rows, cost 4.2e+05                                                                                                                      \u2502\n\u2502             \u2502     Act. 54.5K rows (1.4 MB), Throughput: 1.2G rows/s, CPU Time per worker: avg 14.3 ms, max 15.0 ms, Wall Time: 477.0 us                              \u2502\n\u2502             \u2502     Filtered: -90.6%, QError: 1.1                                                                                                                      \u2502\n\u2502             \u2502     Condition: sr_returned_date_sk == d_date_sk                                                                                                        \u2502\n\u2502             \u251c\u2500 Local Exchange                                                                                                                                        \u2502\n\u2502             \u2502  \u2502     Est. 280.8K rows, cost 2.3e+05                                                                                                                  \u2502\n\u2502             \u2502  \u2514\u2500 Filter                                                                                                                                             \u2502\n\u2502             \u2502     \u2502     Est. 280.8K rows, cost 2.3e+05                                                                                                               \u2502\n\u2502             \u2502     \u2502     Act. 54.5K rows (1.9 MB), Throughput: 5.7G rows/s, CPU Time per worker: avg 865.0 us, max 885.0 us, Wall Time: 96.0 us                       \u2502\n\u2502             \u2502     \u2502     Filtered: 0.0%, QError: 5.2                                                                                                                  \u2502\n\u2502             \u2502     \u2502     Dynamic Filters: {sr_returned_date_sk:range}                                                                                                 \u2502\n\u2502             \u2502     \u2514\u2500 ReadFromStorage tpcds.store_returns                                                                                                             \u2502\n\u2502             \u2502              Est. 280.8K rows, cost 2.1e+05                                                                                                            \u2502\n\u2502             \u2502              Act. 54.5K rows (1.9 MB), Throughput: 5.8G rows/s, CPU Time per worker: avg 2.4 ms, max 2.4 ms, Wall Time: 95.0 us                        \u2502\n\u2502             \u2502              Filtered: 0.0%, QError: 5.2                                                                                                               \u2502\n\u2502             \u2514\u2500 Projection                                                                                                                                            \u2502\n\u2502                \u2502     Est. 366 rows, cost 6.0e+04                                                                                                                     \u2502\n\u2502                \u2502     Act. 28.6K rows (228.8 KB), Throughput: 45.4G rows/s, CPU Time per worker: avg 1.1 ms, max 1.3 ms, Wall Time: 7.0 us                            \u2502\n\u2502                \u2502     Filtered: 0.0%, QError: 80.0                                                                                                                    \u2502\n\u2502                \u2502     Dynamic Filters Builder: {d_date_sk}                                                                                                            \u2502\n\u2502                \u2514\u2500 Broadcast Exchange                                                                                                                                 \u2502\n\u2502                   \u2502     Est. 366 rows, cost 6.0e+04                                                                                                                  \u2502\n\u2502                   \u2514\u2500 Filter                                                                                                                                          \u2502\n\u2502                      \u2502     Est. 366 rows, cost 5.9e+04                                                                                                               \u2502\n\u2502                      \u2502     Act. 366 rows (6.1 KB), Throughput: 85.1M rows/s, CPU Time per worker: avg 282.0 us, max 283.0 us, Wall Time: 44.0 us                     \u2502\n\u2502                      \u2502     Filtered: 0.0%, QError: 1.0                                                                                                               \u2502\n\u2502                      \u2502     d_year = 2000                                                                                                                             \u2502\n\u2502                      \u2514\u2500 ReadFromStorage tpcds.date_dim                                                                                                               \u2502\n\u2502                               Est. 71.3K rows, cost 5.4e+04                                                                                                          \u2502\n\u2502                               Act. 366 rows (6.1 KB), Throughput: 85.1M rows/s, CPU Time per worker: avg 780.0 us, max 840.0 us, Wall Time: 43.0 us                  \u2502\n\u2502                               Filtered: 0.0%, QError: 199.6                                                                                                          \u2502\n\u2502 note: Dynamic Filter is applied for 1 times.                                                                                                                         \u2502\n\u2502 note: CTE(Common Table Expression) is applied for 2 times.                                                                                                           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,s.kt)("ol",{start:3},(0,s.kt)("li",{parentName:"ol"},"Explain analyze distributed + SQL")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"EXPLAIN ANALYZE DISTRIBUTED\nSELECT\n    i_item_id,\n    avg(ss_quantity) AS agg1,\n    avg(ss_list_price) AS agg2,\n    avg(ss_coupon_amt) AS agg3,\n    avg(ss_sales_price) AS agg4\nFROM store_sales\n, customer_demographics\n, date_dim\n, item\n, promotion\nWHERE (ss_sold_date_sk = d_date_sk) AND (ss_item_sk = i_item_sk) AND (ss_cdemo_sk = cd_demo_sk) AND (ss_promo_sk = p_promo_sk) AND (cd_gender = 'M') AND (cd_marital_status = 'S') AND (cd_education_status = 'College') AND ((p_channel_email\n = 'N') OR (p_channel_event = 'N')) AND (d_year = 2000)\nGROUP BY i_item_id\nORDER BY i_item_id ASC\nLIMIT 100\n\n")),(0,s.kt)("p",null,"\u7ed3\u679c\u8f93\u51fa\uff1a\n",(0,s.kt)("img",{src:e(32410).Z,width:"2290",height:"1694"})),(0,s.kt)("p",null,"\u8bf4\u660e\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"QError: max(Est rows, Act rows) / min(Est rows, Act rows)\uff0c1 \u662f\u6700\u4f73\u7684\u3002"),(0,s.kt)("li",{parentName:"ul"},"Wall Time: \u6240\u6709\u5de5\u4f5c\u8282\u70b9\u4e2d\u7684\u6700\u5927\u5899\u949f\u65f6\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u627e\u51fa\u54ea\u4e2a\u6b65\u9aa4\u82b1\u8d39\u4e86\u6700\u591a\u7684\u65f6\u95f4\u3002"),(0,s.kt)("li",{parentName:"ul"},"CPU Time: \u6211\u4eec\u53ef\u4ee5\u627e\u51fa\u54ea\u4e2a\u6b65\u9aa4\u5b58\u5728\u6570\u636e\u503e\u659c\u95ee\u9898\uff08\u5982\u679c\u6700\u5927\u65f6\u95f4\u5927\u4e8e\u5e73\u5747\u65f6\u95f4\uff0c\u5219\u8868\u793a\u6709\u4e00\u4e2a\u5de5\u4f5c\u8282\u70b9\u5904\u7406\u4e86\u8fc7\u591a\u7684\u6570\u636e\uff09\u3002")))}p.isMDXComponent=!0},87126:(t,r,e)=>{e.d(r,{Z:()=>n});const n=e.p+"assets/images/boxcnbHJgX6mTV1MHFyLXajy23f-c0effcd2819edf7d1bb23755d9527e39.png"},32410:(t,r,e)=>{e.d(r,{Z:()=>n});const n=e.p+"assets/images/boxcnxiwhbhVnUQkflLLELMblMb-53e97bb3ff821485ece57e29df406c24.png"}}]);