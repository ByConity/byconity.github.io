"use strict";(self.webpackChunkbyconity=self.webpackChunkbyconity||[]).push([[4323],{9582:i=>{i.exports=JSON.parse('{"label":"Docs","permalink":"/docs/tags/docs","allTagsPath":"/docs/tags","count":55,"items":[{"id":"sql-syntax/functions/aggregate","title":"Aggregation","description":"Notice:","permalink":"/docs/sql-syntax/functions/aggregate"},{"id":"sql-syntax/ansi-compatibility","title":"ANSI Compatibility","description":"ByConity provides a rich set of SQL syntax through ANSI SQL dialect. When using this dialect, SQL statements will be parsed and validated by Apache Calcite and then sent to servers for execution. Apache Calcite supports standard ANSI SQL, please refer to the BNF-grammar here for more details//calcite.apache.org/docs/reference.html.","permalink":"/docs/sql-syntax/ansi-compatibility"},{"id":"sql-syntax/functions/arithmetic","title":"Arithmetic","description":"Notice:","permalink":"/docs/sql-syntax/functions/arithmetic"},{"id":"sql-syntax/functions/array","title":"Array","description":"Notice:","permalink":"/docs/sql-syntax/functions/array"},{"id":"introduction/background-and-technical-architecture","title":"Background and Technical Architecture","description":"ByConity is a data warehouse system designed for modern IT architecture changes. It is designed with Cloud Native architecture. It provides excellent query and write performance while meeting the needs of data warehouse users for resource elastic volume expansion and contraction, read and write separation, resource isolation, and strong data consistency.","permalink":"/docs/introduction/background-and-technical-architecture"},{"id":"advanced-guide/background-task-configuration","title":"Background Tasks Configuration","description":"Start/Stop Merge of tables","permalink":"/docs/advanced-guide/background-task-configuration"},{"id":"basic-guide/background-task-management","title":"Background Tasks Management","description":"Document Type: Tutorial","permalink":"/docs/basic-guide/background-task-management"},{"id":"sql-syntax/functions/bit-bitmap","title":"Bit & Bitmap","description":"Notice:","permalink":"/docs/sql-syntax/functions/bit-bitmap"},{"id":"advanced-guide/bucket-table-best-practice","title":"Bucket table \u6700\u4f73\u5b9e\u8df5\u624b\u518c","description":"\u5728 ByConity \u4e2d\u4f7f\u7528 Bucket table \u65f6\uff0c\u7cfb\u7edf\u4f1a\u4f9d\u636e\u7528\u6237\u5efa\u8868\u8bed\u53e5\u4e2d\u63d0\u4f9b\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5217\u3001\u8868\u8fbe\u5f0f\u6574\u7406\u8868\u6570\u636e\uff0c\u5c06\u76f8\u540c\u503c\u7684\u6570\u636e\u805a\u7c07\u5728\u540c\u4e00\u4e2a bucket number \u4e0b\u3002","permalink":"/docs/advanced-guide/bucket-table-best-practice"},{"id":"basic-guide/client-connection","title":"Client Connection","description":"Document Type: Tutorial","permalink":"/docs/basic-guide/client-connection"},{"id":"basic-guide/cluster-configuration","title":"Cluster Configuration","description":"Document Type: Descriptive","permalink":"/docs/basic-guide/cluster-configuration"},{"id":"community/community-code-of-conduct","title":"Community Code of Conduct","description":"Our Pledge","permalink":"/docs/community/community-code-of-conduct"},{"id":"sql-syntax/functions/comparison","title":"Comparison","description":"Notice:","permalink":"/docs/sql-syntax/functions/comparison"},{"id":"sql-syntax/functions/conditional","title":"Conditional","description":"Notice:","permalink":"/docs/sql-syntax/functions/conditional"},{"id":"basic-guide/data-type","title":"Data Type","description":"Document Type: Descriptive","permalink":"/docs/basic-guide/data-type"},{"id":"sql-syntax/data-types","title":"Data Types","description":"The data types provided in ByConity are adapted from ClickHouse. Visit this page for more information on ClickHouse data types.","permalink":"/docs/sql-syntax/data-types"},{"id":"basic-guide/data-visualisation","title":"Data Visualisation","description":"Tutorial goals:","permalink":"/docs/basic-guide/data-visualisation"},{"id":"basic-guide/database-table-design","title":"Database Table Design","description":"Document Type: Tutorial","permalink":"/docs/basic-guide/database-table-design"},{"id":"sql-syntax/functions/date-times","title":"Date & Times","description":"Notice:","permalink":"/docs/sql-syntax/functions/date-times"},{"id":"basic-guide/deployment-requirements","title":"Deployment Requirements","description":"ByConity can run on most mainstream commercial servers. We recommend that the deployment of ByConity can comply with the following requirements:","permalink":"/docs/basic-guide/deployment-requirements"},{"id":"sql-syntax/functions/encoding","title":"Encoding","description":"Notice:","permalink":"/docs/sql-syntax/functions/encoding"},{"id":"sql-syntax/functions/encryption","title":"Encryption","description":"Notice:","permalink":"/docs/sql-syntax/functions/encryption"},{"id":"basic-guide/data-export","title":"Export Data","description":"Document Type: Tutorial","permalink":"/docs/basic-guide/data-export"},{"id":"sql-syntax/functions/functions","title":"Functions","description":"ByConity provides two SQL dialects, (1) ClickHouse and (2) ANSI.","permalink":"/docs/sql-syntax/functions/functions"},{"id":"sql-syntax/functions/geo","title":"Geo","description":"Notice:","permalink":"/docs/sql-syntax/functions/geo"},{"id":"community/git-workflow","title":"Git WorkFlow","description":"ByConity is leverage the Github doing the developement. Each contributor and maintainer in ByConity must follow this workflow:","permalink":"/docs/community/git-workflow"},{"id":"sql-syntax/functions/hash","title":"Hash","description":"Notice:","permalink":"/docs/sql-syntax/functions/hash"},{"id":"sql-syntax/hash","title":"Hash","description":"Notice:","permalink":"/docs/sql-syntax/hash"},{"id":"basic-guide/data-import","title":"Import Data","description":"Document Type: Tutorial","permalink":"/docs/basic-guide/data-import"},{"id":"sql-syntax/functions/ip-address","title":"IP Address","description":"Notice:","permalink":"/docs/sql-syntax/functions/ip-address"},{"id":"sql-syntax/functions/json","title":"JSON","description":"Notice:","permalink":"/docs/sql-syntax/functions/json"},{"id":"sql-syntax/logical","title":"Logical","description":"Notice:","permalink":"/docs/sql-syntax/logical"},{"id":"introduction/main-principle-concepts","title":"Main Principles Concepts","description":"ByConity \'s query execution process is shown in the figure below. First, obtain the Metadata information required for the query through the Metadata service. Then generate an efficient query plan through the optimizer according to the user\'s SQL , and schedule it to the corresponding calculation group to read the data and execute it. Finally, the result set is summarized and sent back to Client . In order for users to better understand the working principle of ByConity query, this chapter will introduce the main principle of ByConity.","permalink":"/docs/introduction/main-principle-concepts"},{"id":"sql-syntax/functions/map","title":"Map","description":"map","permalink":"/docs/sql-syntax/functions/map"},{"id":"sql-syntax/mathematical","title":"Mathematical","description":"Notice:","permalink":"/docs/sql-syntax/mathematical"},{"id":"basic-guide/monitoring","title":"Monitor Cluster","description":"Prometheus Monitoring Indicators\uff1a","permalink":"/docs/basic-guide/monitoring"},{"id":"sql-syntax/functions/nullable","title":"Nullable","description":"Notice:","permalink":"/docs/sql-syntax/functions/nullable"},{"id":"sql-syntax/functions/others","title":"Others","description":"MACNumToString","permalink":"/docs/sql-syntax/functions/others"},{"id":"advanced-guide/query-optimiser","title":"Query Optimizer","description":"The optimizer is the core of the database system. An excellent optimizer can greatly improve query performance, especially in complex query scenarios. The optimizer can bring performance improvements of several to hundreds of times.","permalink":"/docs/advanced-guide/query-optimiser"},{"id":"introduction/quick-start","title":"Quick Start","description":"Now that the cluster is up and running, let\'s give it a quick spin :)","permalink":"/docs/introduction/quick-start"},{"id":"sql-syntax/functions/random","title":"Random","description":"Notice:","permalink":"/docs/sql-syntax/functions/random"},{"id":"introduction/recommended-use-case","title":"Recommended Use Cases","description":"ByConity uses a large number of mature OLAP technologies, such as column storage engine, MPP execution, intelligent query optimization, vectorized execution, Codegen, indexing, data compression, mainly used in OLAP query and computing scenarios. It has very good performance in real-time data access, aggregation query of large and wide tables, complex analysis and calculation under massive data, and multi-table associated query scenarios.","permalink":"/docs/introduction/recommended-use-case"},{"id":"community/setup-development-environment","title":"Setup ByConity Developement Environment","description":"Environment Dependencies","permalink":"/docs/community/setup-development-environment"},{"id":"sql-syntax/sql-statements","title":"SQL Statements","description":"The supported statements in ByConity are similar to ClickHouse, but it is still recommended to follow the ByConity manual to ensure proper use. Some of the examples below are referenced from ClickHouse Documentation but have been adapted and modified to work in ByConity.","permalink":"/docs/sql-syntax/sql-statements"},{"id":"sql-syntax/string","title":"String","description":"Notice:","permalink":"/docs/sql-syntax/string"},{"id":"sql-syntax/functions/type-conversion","title":"Type Conversion","description":"Notice:","permalink":"/docs/sql-syntax/functions/type-conversion"},{"id":"sql-syntax/urls","title":"URLs","description":"Notice:","permalink":"/docs/sql-syntax/urls"},{"id":"sql-syntax/functions/uuid","title":"UUID","description":"Notice:","permalink":"/docs/sql-syntax/functions/uuid"},{"id":"basic-guide/virtual-warehouse-configuration","title":"Virtual Warehouse Configuration","description":"Document Type: Tutorial","permalink":"/docs/basic-guide/virtual-warehouse-configuration"},{"id":"sql-syntax/functions/window","title":"Window","description":"ByConity supports the standard syntax of window functions. A list of window related features are explained below.","permalink":"/docs/sql-syntax/functions/window"},{"id":"advanced-guide/managing-concurrency","title":"\u4e8b\u7269\u548c\u5e76\u53d1\u63a7\u5236","description":"\u4e8b\u52a1\u6982\u89c8","permalink":"/docs/advanced-guide/managing-concurrency"},{"id":"advanced-guide/column-based-storage","title":"\u5217\u5b58\u8bbe\u8ba1\u539f\u7406","description":"\u901a\u5e38\u4e8b\u52a1\u578b\u6570\u636e\u5e93\u91c7\u7528\u884c\u5b58\u4fbf\u4e8e\u652f\u6301\u4e8b\u52a1\u548c\u9ad8\u5e76\u53d1\u8bfb\u5199\uff0c\u5206\u6790\u578b\u6570\u636e\u5e93\u91c7\u7528\u5217\u5b58\u51cf\u5c11 IO \u548c\u4fbf\u4e8e\u538b\u7f29\u3002ByConity \u91c7\u7528\u5217\u5b58\u7684\u65b9\u5f0f\uff0c\u4fdd\u8bc1\u8bfb\u5199\u6027\u80fd\u3001\u652f\u6301\u4e8b\u52a1\u4e00\u81f4\u6027\uff0c\u53c8\u9002\u7528\u5927\u89c4\u6a21\u7684\u6570\u636e\u8ba1\u7b97\u3002","permalink":"/docs/advanced-guide/column-based-storage"},{"id":"advanced-guide/complex-query-model-and-optimisation","title":"\u590d\u6742\u67e5\u8be2\u6a21\u578b\u548c\u6267\u884c\u8c03\u4f18","description":"\u590d\u6742\u67e5\u8be2\u6267\u884c\u6a21\u578b","permalink":"/docs/advanced-guide/complex-query-model-and-optimisation"},{"id":"advanced-guide/import-optimisation","title":"\u5bfc\u5165\u8c03\u4f18","description":"\u76ee\u524d CNCH \u652f\u6301\u7684\u5bfc\u5165\u65b9\u5f0f\u6709\u5982\u4e0b\u51e0\u79cd\uff1a","permalink":"/docs/advanced-guide/import-optimisation"},{"id":"advanced-guide/resource-manager","title":"\u8d44\u6e90\u7ba1\u7406\u5668","description":"\u8d44\u6e90\u7ba1\u7406\u5668\uff08Resource Manager\uff0c\u7b80\u79f0 RM\uff09\u7ec4\u4ef6\u7528\u4e8e\u5bf9 ByConity \u8ba1\u7b97\u8d44\u6e90\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\u548c\u8c03\u5ea6\uff0c\u662f\u5b9e\u73b0\u8d44\u6e90\u5f39\u6027\u548c\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002","permalink":"/docs/advanced-guide/resource-manager"}]}')}}]);