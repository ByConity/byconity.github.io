"use strict";(self.webpackChunkbyconity=self.webpackChunkbyconity||[]).push([[1940],{49613:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var n=a(59496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=m(a),u=r,g=d["".concat(s,".").concat(u)]||d[u]||c[u]||i;return a?n.createElement(g,l(l({ref:t},p),{},{components:a})):n.createElement(g,l({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},83387:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var n=a(64778),r=(a(59496),a(49613));const i={title:"Direct Access via Hive",sidebar_position:6,tags:["Docs"]},l="Data Direct Access",o={unversionedId:"data-import/import-methods/direct-access-via-hive",id:"version-0.3.0/data-import/import-methods/direct-access-via-hive",title:"Direct Access via Hive",description:"Importing from Hive External Tables",source:"@site/versioned_docs/version-0.3.0/data-import/import-methods/direct-access-via-hive.mdx",sourceDirName:"data-import/import-methods",slug:"/data-import/import-methods/direct-access-via-hive",permalink:"/docs/0.3.0/data-import/import-methods/direct-access-via-hive",draft:!1,editUrl:"https://github.com/ByConity/byconity.github.io/tree/main/versioned_docs/version-0.3.0/data-import/import-methods/direct-access-via-hive.mdx",tags:[{label:"Docs",permalink:"/docs/0.3.0/tags/docs"}],version:"0.3.0",sidebarPosition:6,frontMatter:{title:"Direct Access via Hive",sidebar_position:6,tags:["Docs"]},sidebar:"tutorialSidebar",previous:{title:"Direct Access via MySQL",permalink:"/docs/0.3.0/data-import/import-methods/direct-access-via-mysql"},next:{title:"Ad-hoc Import",permalink:"/docs/0.3.0/data-import/import-methods/ad-hoc-import"}},s={},m=[{value:"Importing from Hive External Tables",id:"importing-from-hive-external-tables",level:2},{value:"Usage Examples:",id:"usage-examples",level:3},{value:"Parameter Settings",id:"parameter-settings",level:3}],p={toc:m},d="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-direct-access"},"Data Direct Access"),(0,r.kt)("h2",{id:"importing-from-hive-external-tables"},"Importing from Hive External Tables"),(0,r.kt)("p",null,"CnchHive is a table engine provided by ByConity that supports federated queries using external tables. Users can directly accelerate data queries without the need for data import."),(0,r.kt)("h3",{id:"usage-examples"},"Usage Examples:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Example 1: Creating a Full Set of Hive Tables")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- Creating a Hive external table\nCREATE TABLE t\n(\n  client_ip   String,\n  request     String,\n  status_code INT,\n  object_size INT,\n  date String\n)\nENGINE = CnchHive('psm', 'hive_database_name', 'hive_table_name')\nPARTITION BY date;\n\n-- Parameter Explanation:\n-- psm: hivemetastore psm\n-- hive_database_name: Hive database name\n-- hive_table_name: Hive table name\n\n-- Querying the Hive external table\nselect * from  t where xxx;\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Example 2: Creating a Subset of Hive Tables")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE t\n(\n  client_ip   String,\n  request     String,\n  date String\n)\nENGINE = CnchHive('psm', 'hive_database_name', 'hive_table_name')\nPARTITION BY date;\n\n-- Parameter Explanation:\n-- psm: hivemetastore psm\n-- hive_database_name: Hive database name\n-- hive_table_name: Hive table name\n\n-- Querying the Hive external table\nselect * from  t where xxx;\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Example 3: Creating a Hive Bucket Table")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE t\n(\n  client_ip   String,\n  request     String,\n  device_id   String,\n  server_time String,\n  date String\n)\nENGINE = CnchHive('psm', 'hive_database_name', 'hive_table_name')\nPARTITION BY date\nCLUSTER BY device_id INTO 65536 BUCKETS\nORDER BY server_time\nSETTINGS cnch_vw_default ='vw_default';\n\n-- Parameter Explanation:\n-- psm: hivemetastore psm\n-- hive_database_name: Hive database name\n-- hive_table_name: Hive table name\n\n-- Querying the Hive external table\nselect * from  t where xxx;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Notes:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The external table columns must correspond one-to-one with the Hive table columns, but the order of the columns does not matter. You can select some of the columns from the Hive table, but all partition columns must be included."),(0,r.kt)("li",{parentName:"ul"},"Partitions need to be specified using the ",(0,r.kt)("inlineCode",{parentName:"li"},"PARTITION BY")," statement and defined in the description list. For bucket tables, the bucket column and the number of buckets need to be specified. If there is an ",(0,r.kt)("inlineCode",{parentName:"li"},"ORDER BY")," field, it also needs to be specified."),(0,r.kt)("li",{parentName:"ul"},"The engine is specified as CnchHive. The parameters include: psm, hive_database_name, and hive_table_name. Views are not supported."),(0,r.kt)("li",{parentName:"ul"},"There are two configurations: ",(0,r.kt)("inlineCode",{parentName:"li"},"cnch_vw_default")," is used to specify the vw, and ",(0,r.kt)("inlineCode",{parentName:"li"},"max_read_row_group_threads")," is used to specify the number of concurrent reads for Parquet row groups."),(0,r.kt)("li",{parentName:"ul"},"The supported column type mappings are shown in the following table:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Hive Column Type"),(0,r.kt)("th",{parentName:"tr",align:null},"CnchHive Column Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"INT/INTERGER"),(0,r.kt)("td",{parentName:"tr",align:null},"INT/INTERGER"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.kt)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TIMESTAMP"),(0,r.kt)("td",{parentName:"tr",align:null},"DateTime"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.kt)("td",{parentName:"tr",align:null},"FixedString"),(0,r.kt)("td",{parentName:"tr",align:null},"Internally converted to FixedString")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CHAR"),(0,r.kt)("td",{parentName:"tr",align:null},"FixedString"),(0,r.kt)("td",{parentName:"tr",align:null},"Internally converted to FixedString")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.kt)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.kt)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.kt)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAP"),(0,r.kt)("td",{parentName:"tr",align:null},"Map"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ARRAY"),(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," Schema changes in Hive tables are not automatically synchronized and require recreating the Hive external table in ClickHouse. Currently, only the Parquet storage format is supported, and insert and alter operations are not supported."),(0,r.kt)("h3",{id:"parameter-settings"},"Parameter Settings"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cnch_vw_default"),": Used to specify the vw."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_read_row_group_threads"),": Used to specify the number of concurrent reads for Parquet row groups.")))}c.isMDXComponent=!0}}]);