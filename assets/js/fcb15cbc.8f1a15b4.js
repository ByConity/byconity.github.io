"use strict";(self.webpackChunkbyconity=self.webpackChunkbyconity||[]).push([[2508],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(k,l(l({ref:t},c),{},{components:n})):r.createElement(k,l({ref:t},c))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9969:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(4778),o=(n(9496),n(9613));const a={title:"Docker Deployment",sidebar_position:1,tags:["Docs"]},l="Docker Deployment",i={unversionedId:"quick-start/docker-deploy",id:"quick-start/docker-deploy",title:"Docker Deployment",description:"This tutorial guides users to quickly deploy ByConity locally using Docker. Users can follow the steps below to deploy a simple ByConity cluster for a quick start experience. If you want to fully try and understand ByConity, it is recommended that you skip this section and refer directly to ByConity Cluster Deployment to experience the powerful performance of ByConity.",source:"@site/docs/quick-start/docker-deploy.mdx",sourceDirName:"quick-start",slug:"/quick-start/docker-deploy",permalink:"/docs/quick-start/docker-deploy",draft:!1,editUrl:"https://github.com/ByConity/byconity.github.io/tree/main/docs/quick-start/docker-deploy.mdx",tags:[{label:"Docs",permalink:"/docs/tags/docs"}],version:"current",sidebarPosition:1,frontMatter:{title:"Docker Deployment",sidebar_position:1,tags:["Docs"]},sidebar:"tutorialSidebar",previous:{title:"Features and Capabilities",permalink:"/docs/introduction/features-and-capabilities"},next:{title:"Basic Operations",permalink:"/docs/quick-start/basic-database-operations"}},s={},p=[{value:"Environment Preparation",id:"environment-preparation",level:2},{value:"Deployment Steps",id:"deployment-steps",level:2},{value:"Connectivity Test",id:"connectivity-test",level:2},{value:"Checking the Worker Group Status:",id:"checking-the-worker-group-status",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker-deployment"},"Docker Deployment"),(0,o.kt)("p",null,"This tutorial guides users to quickly deploy ByConity locally using Docker. Users can follow the steps below to deploy a simple ByConity cluster for a quick start experience. If you want to fully try and understand ByConity, it is recommended that you skip this section and refer directly to ",(0,o.kt)("a",{parentName:"p",href:"/docs/deployment/deployment-with-k8s"},"ByConity Cluster Deployment")," to experience the powerful performance of ByConity."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note"),":"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"ByConity uses FoundationDB as its metadata storage, but FoundationDB does not work properly in Docker on Apple Silicon machines. Therefore, Docker deployment of ByConity will not run on mac m1/m2."),(0,o.kt)("li",{parentName:"ol"},"Docker deployment is only suitable for basic entry-level testing and is not recommended for large-scale testing or production environments. Refer to #ByConity Deployment# to understand deployment methods for other scenarios.")),(0,o.kt)("h2",{id:"environment-preparation"},"Environment Preparation"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hardware Requirements"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"It is recommended to use a server with a configuration of at least 16 cores and 32GB RAM.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Software Requirements"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install Docker"),(0,o.kt)("li",{parentName:"ul"},"Install MySQL client")),(0,o.kt)("h2",{id:"deployment-steps"},"Deployment Steps"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Get the Code"))),(0,o.kt)("p",null,"Clone the stable version of ByConity from Github and switch to the docker directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:ByConity/ByConity.git\ncd ByConity/docker/docker-compose\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Create an Environment File"))),(0,o.kt)("p",null,"Create an environment file named ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," from the provided template ",(0,o.kt)("inlineCode",{parentName:"p"},".env.tpl"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cp .env.tpl .env\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Modify Environment Variables"))),(0,o.kt)("p",null,"Modify the ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file accordingly. Here are the variables you can configure:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"COMPOSE_PROJECT_NAME"),": This sets the project name for the Docker Compose setup."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"DATA_DIR"),": Specifies the local path to be mounted into the Docker containers. This path is used for local disk caching, logs, etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SERVER_TCP_PORT")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"SERVER_HTTP_PORT"),": These variables define the exposed ports for the TCP and HTTP ports of the ByConity server.")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Set ByConity Docker Image Source"))),(0,o.kt)("p",null,"If running a specific released version of ByConity:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Update the ",(0,o.kt)("inlineCode",{parentName:"li"},"BYCONITY_IMAGE")," variable in the ",(0,o.kt)("inlineCode",{parentName:"li"},".env")," file to the desired release version, e.g., ",(0,o.kt)("inlineCode",{parentName:"li"},"byconity/byconity:0.3.0"),"."),(0,o.kt)("li",{parentName:"ul"},"Set ",(0,o.kt)("inlineCode",{parentName:"li"},"BYCONITY_BINARY_PATH")," to an empty string.")),(0,o.kt)("p",null,"If running ByConity with a locally built binary:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Update the ",(0,o.kt)("inlineCode",{parentName:"li"},"BYCONITY_IMAGE")," variable in the ",(0,o.kt)("inlineCode",{parentName:"li"},".env")," file to ",(0,o.kt)("inlineCode",{parentName:"li"},"byconity/debian-runner"),"."),(0,o.kt)("li",{parentName:"ul"},"Set ",(0,o.kt)("inlineCode",{parentName:"li"},"BYCONITY_BINARY_PATH")," to the path where the locally built binary is located.")),(0,o.kt)("p",null,"You can also use the ByConity dev-env Docker to compile and build your own ByConity image."),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Start ByConity with Docker Compose"))),(0,o.kt)("p",null,"To start ByConity using Docker Compose, use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# -d indicates running the containers in the background\ndocker-compose -f docker-compose.essentials.yml [-f docker-compose.simple.yml] up [-d]\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"docker-comple.essentials.yml"),": Starts the essential dependencies for the byconity cluster."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"docker-comple.simple.yml"),": A simple byconity cluster."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"docker-comple.multiworker.yml"),": A multi-worker byconity cluster.")),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Print Logs to the Console"))),(0,o.kt)("p",null,"To print the logs of the services to the console, you need to update the configuration files under ",(0,o.kt)("inlineCode",{parentName:"p"},"byconity-*-cluster"),". Set ",(0,o.kt)("inlineCode",{parentName:"p"},"logger: console: true")," in the configuration files."),(0,o.kt)("h2",{id:"connectivity-test"},"Connectivity Test"),(0,o.kt)("p",null,"Access ByConity using the CLI:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/byconity-cli.sh\n")),(0,o.kt)("p",null,"Access HDFS files:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'./scripts/hdfs-cli.sh "hdfs -dfs ls /user/clickhouse"\n')),(0,o.kt)("p",null,"Access fdb through the CLI:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/fdb-cli.sh\n")),(0,o.kt)("h2",{id:"checking-the-worker-group-status"},"Checking the Worker Group Status:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.worker_groups;\n")),(0,o.kt)("p",null,"Sample Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},"Query id: f60481b4-b9a7-494d-a639-ac7be3aa5292\n\nRow 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nid:             wg_default\ntype:           Physical\nvw_uuid:        1a415df1-6265-40b3-9c00-230fc3b026c1\nvw_name:        vw_default\nlinked_id:\nactive_workers: 1\nmin_cpu_usage:  9\nmax_cpu_usage:  9\navg_cpu_usage:  9\nmin_mem_usage:  8\nmax_mem_usage:  8\navg_mem_usage:  8\nis_auto_linked: 0\n")),(0,o.kt)("p",null,"Check worker status:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.workers;\n")),(0,o.kt)("p",null,"Sample Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},"Query id: f2377b52-38eb-4437-9813-d34f9dd28049\n\nRow 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nworker_id:             w1\nhost:                  {HOST}\ntcp_port:              {TCP_PORT}\nrpc_port:              {RPC_PORT}\nhttp_port:             {HTTP_PORT}\nexchange_port:         {EXCHANGE_PORT}\nexchange_status_port:  {EXCHANGE_STATUS_PORT}\nvw_name:               vw_default\nworker_group_id:       wg_default\nquery_num:             0\ncpu_usage:             {xxx}\nreserved_cpu_cores:    0\nmemory_usage:          {xxx}\ndisk_space:            {xxx}\nmemory_available:      {xxx}\nreserved_memory_bytes: 0\nregister_time:         2022-11-30 18:19:49\nlast_update_time:      2022-11-30 18:21:09\nstate:                 1\n")))}d.isMDXComponent=!0}}]);