"use strict";(self.webpackChunkbyconity=self.webpackChunkbyconity||[]).push([[3093],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,y=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(y,l(l({ref:t},u),{},{components:n})):r.createElement(y,l({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},435:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(4778),a=(n(9496),n(9613));const o={title:"ByConity upgrade",sidebar_position:4,tags:["Docs"]},l="Cluster Upgrade and Downgrade",i={unversionedId:"deployment/upgrade",id:"deployment/upgrade",title:"ByConity upgrade",description:"Upgrading Clusters Based on S3 Storage (Applicable Only to Versions Before 0.2.0)",source:"@site/docs/deployment/04-upgrade.mdx",sourceDirName:"deployment",slug:"/deployment/upgrade",permalink:"/docs/deployment/upgrade",draft:!1,editUrl:"https://github.com/ByConity/byconity.github.io/tree/main/docs/deployment/04-upgrade.mdx",tags:[{label:"Docs",permalink:"/docs/tags/docs"}],version:"current",sidebarPosition:4,frontMatter:{title:"ByConity upgrade",sidebar_position:4,tags:["Docs"]},sidebar:"tutorialSidebar",previous:{title:"Deploy on Physical Machines",permalink:"/docs/deployment/package-deployment"},next:{title:"Deployment Settings",permalink:"/docs/deployment/deployment-settings"}},s={},p=[{value:"Upgrading Clusters Based on S3 Storage (Applicable Only to Versions Before 0.2.0)",id:"upgrading-clusters-based-on-s3-storage-applicable-only-to-versions-before-020",level:2}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cluster-upgrade-and-downgrade"},"Cluster Upgrade and Downgrade"),(0,a.kt)("h2",{id:"upgrading-clusters-based-on-s3-storage-applicable-only-to-versions-before-020"},"Upgrading Clusters Based on S3 Storage (Applicable Only to Versions Before 0.2.0)"),(0,a.kt)("p",null,"After the preview version of S3 (from pre-0.2.0 to 0.2.0), some S3 object keys and S3 metadata have changed. We provide tools to migrate from older versions. Use these tools only if you are using an older version of ByConity (before version 0.2.0) and storing data in S3. Follow these steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Stop the ByConity cluster.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# stop the cluster\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Use the provided tool to migrate S3 data.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you are running ByConity using docker, you can log in to the server/worker node and use the ps command to find the clickhouse binary file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"./clickhouse s3-rename --s3_ak_id ${S3_AK_ID} --s3_ak_secret ${S3_AK_SECRET} --from_bucket ${BYCONITY_S3_BUCKET} --s3_endpoint ${S3_ENDPOINT} --s3_region ${S3_REGION} --root_prefix ${BYCONTIY_DATA_PREFIX}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you are running ByConity using a docker wrapper:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"docker run -it --rm --network host --name byconity-s3-sanitizer byconity/byconity:0.2.0 clickhouse s3-rename --s3_ak_id ${S3_AK_ID} --s3_ak_secret ${S3_AK_SECRET} --from_bucket ${BYCONITY_S3_BUCKET} --s3_endpoint ${S3_ENDPOINT} --s3_region ${S3_REGION} --root_prefix ${BYCONTIY_DATA_PREFIX}\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"tool arguments"),(0,a.kt)("th",{parentName:"tr",align:null},"explanation"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"s3_ak_id"),(0,a.kt)("td",{parentName:"tr",align:null},"S3 access key ID used by byconity")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"s3_ak_secret"),(0,a.kt)("td",{parentName:"tr",align:null},"S3 secret access key used by byconity")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"s3_region"),(0,a.kt)("td",{parentName:"tr",align:null},"S3 region used by byconity")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"s3_endpoint"),(0,a.kt)("td",{parentName:"tr",align:null},"S3 endpoint used by byconity")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"from_bucket"),(0,a.kt)("td",{parentName:"tr",align:null},"S3 bucket name used by byconity")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"root_prefix"),(0,a.kt)("td",{parentName:"tr",align:null},"S3 object prefix used by byconity")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"thread_number"),(0,a.kt)("td",{parentName:"tr",align:null},"Number of threads to use (default is 1)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"need_delete"),(0,a.kt)("td",{parentName:"tr",align:null},"Whether to delete the original file (default is true)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"uuid_check"),(0,a.kt)("td",{parentName:"tr",align:null},"Whether to check if the UUID is valid (default is true)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"enable_logging"),(0,a.kt)("td",{parentName:"tr",align:null},"Whether to enable logging output")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"logging_level"),(0,a.kt)("td",{parentName:"tr",align:null},"Logging level (default is debug output)")))),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Use the provided tool to migrate S3 metadata.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you know the location of the clickhouse binary file:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"./clickhouse s3-meta-sanitizer -C cnch_config.xml\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you are running ByConity using a docker wrapper:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"docker run -it --rm --network host --name byconity-s3-sanitizer byconity/byconity:0.2.0 clickhouse s3-meta-sanitizer --config-file /root/app/config/cnch_config.xml\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"tool arguments"),(0,a.kt)("th",{parentName:"tr",align:null},"explanation"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"C"),(0,a.kt)("td",{parentName:"tr",align:null},"Specify the config file from the ",(0,a.kt)("inlineCode",{parentName:"td"},"cnch_config")," configuration field in your ByConity server configuration file.")))),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Restart the ByConity cluster.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# restart the cluster\n")))}c.isMDXComponent=!0}}]);